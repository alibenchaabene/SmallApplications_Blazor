@page "/Beginner/binaryToDecimal"

<PageTitle>BinaryToDecimal</PageTitle>

<MudAlert Severity="Severity.Info" Elevation="5">
	Bin2Dec allows the user to enter strings of binary digits, 0's and 1's, in any sequence and then displays its decimal equivalent.
</MudAlert>
<br />
<MudAlert Severity="Severity.Info" Elevation="5">
	Bin2Dec allows the user to enter strings of decimal number and then displays its binary equivalent.
</MudAlert>
<br />
<div class="d-flex justify-center">
	<MudPaper Class="pa-8" Elevation="5">
		<MudTextField T="string"
					  Label="Binary"
					  Placeholder="Enter binary number"
					  @bind-Value="Binary" />
		<MudTextField T="string"
					  Label="Decimal"
					  Placeholder="Enter decimal number"
					  @bind-Value="Decimal" />
		<MudButton Class="mt-5"
				   Variant="Variant.Filled"
				   Color="Color.Primary"
				   OnClick="ConvertDecimal">
			Convert to Decimal
		</MudButton>
		<MudButton Class="mt-5"
				   Variant="Variant.Filled"
				   Color="Color.Secondary"
				   OnClick="ConvertBinary">
			Convert to Binary
		</MudButton>
		<MudButton Class="mt-5"
				   Variant="Variant.Filled"
				   OnClick="Reset">
			Reset
		</MudButton>
	</MudPaper>
</div>
@code {

	public string Binary = string.Empty;
	public string Decimal = string.Empty;

	public void ConvertDecimal()
	{
		try
		{
			if (string.IsNullOrEmpty(Binary)) throw new FormatException();
			Decimal = Convert.ToInt32(Binary, 2).ToString();
			ShowAlert("Converted with success", Severity.Success);
		}
		catch
		{
			ShowAlert("Binary must be a valid number with only 0s and 1s.", Severity.Error);
		}
	}

	public void ConvertBinary()
	{
		try
		{
			if (string.IsNullOrEmpty(Decimal)) throw new FormatException();
			int number = Convert.ToInt32(Decimal);
			Binary = Convert.ToString(number, 2);
			ShowAlert("Converted with success", Severity.Success);
		}
		catch
		{
			ShowAlert("Decimal must be a valid number with digits 0-9.", Severity.Error);
		}
	}

	void ShowAlert(string message, Severity severity)
	{
		_snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomRight;
		_snackbar.Add(message, severity, config =>
		{
			config.ShowCloseIcon = true;
		});
	}

	void Reset()
	{
		Decimal = string.Empty;
		Binary = string.Empty;
	}
}
